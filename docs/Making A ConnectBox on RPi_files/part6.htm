<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Section 2: Creating a Mac Based Build Environment</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part5.htm">&lt; Previous</a><span> | </span><a href="../Making%20A%20ConnectBox%20on%20RPi.html">Contents</a><span> | </span><a href="part7.htm">Next &gt;</a></p><p class="s9" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Section 2: Creating a Mac Based Build Environment</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">In the following instructions for the Mac build environment, we will open a terminal window on the Mac and from within that window, launch <i>vagrant </i>to create a virtual Ubuntu/Linux machine. It is THIS terminal window which will be used in almost all of the steps in interacting with the target (ie, Raspberry or NEO) machine. When a terminal window on the Mac <i><b>other than </b></i>this window is needed, we will explicitly state that such is the case.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.1:</span><span class="p"> First, create a home directory for your build activities. In the following, we will use </span><span class="s13">&lt;YHD&gt; </span><span class="p">to represent the path to </span><span class="s13">Your Home Directory</span><span class="p">. (I used Users/Jim/ ConnectBox/ImageBuild/). Open a regular terminal window (we are not in vagrant yet) and type:</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">cd </span><span style=" color: #B51700;">&lt;YHD&gt;</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">git clone https://github.com/ConnectBox/connectbox-tools</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">chmod 777 &lt;YHD&gt;/connectbox-tools-master/deployment/make_cb.py</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">This will create directory below <span style=" color: #B51700;">&lt;YHD&gt; </span>named <span style=" color: #B51700;">connectbox-tools-master </span>and make the python tool, <span style=" color: #B51700;">make_cb.py</span>, executable.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.2:</span><span class="p"> Set up VirtualBox and Vagrant:</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- Install the latest version of the program Virtual Box (VB) (Currently at 6.1.6).</p><p class="s14" style="padding-top: 1pt;padding-left: 20pt;text-indent: -15pt;line-height: 14pt;text-align: left;">- <span class="p">If the VB fails to install, check Settings -&gt; Security and Privacy to see if there is a line at the bottom re: Syetem Developer Oracle blocked from loading… if so, unlock the Security and Privacy page (lock icon at the bottom left) and click the “Allow” button to allow the program to load.</span></p><p class="s15" style="padding-left: 20pt;text-indent: -15pt;line-height: 14pt;text-align: left;"><span class="s14">- </span><a href="http://www.nakivo.com/blog/how-to-install-virtualbox-" class="s16" target="_blank">Install the VirtualBox Extension pack which is required for mounting a USB device (needed later). (See </a>https://www.nakivo.com/blog/how-to-install-virtualbox-<span class="p"> </span>extension-pack/<span class="p">).</span></p><p class="s14" style="padding-left: 20pt;text-indent: -15pt;line-height: 14pt;text-align: left;">- <span class="p">Install the latest version of Vagrant (currently at 2.2.8) from (</span><span class="s15">https://</span><a href="http://www.vagrantup.com/downloads.html)" class="s16" target="_blank"> </a><a href="http://www.vagrantup.com/downloads.html)" class="a" target="_blank">www.vagrantup.com/downloads.html</a><a href="http://www.vagrantup.com/downloads.html)" class="s16" target="_blank">)</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.3:</span><span class="p"> Start VirtualBox and Vagrant:</span></p><p class="s14" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">- <span class="p">Start Virtual Box (if it isn’t already running)</span></p><p class="s14" style="padding-left: 5pt;text-indent: 0pt;line-height: 16pt;text-align: left;">- <span class="p">Open a terminal window and type</span></p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">cd </span><span style=" color: #B51700;">&lt;YHD&gt;/connectbox-tools-master/deployment</span></p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">vagrant up</span></p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">vagrant ssh</span></p><p class="s17" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">NOTE<span class="p">: We are now in the terminal window that we will use for the remainder of our interactions in building our image. When we reference the &quot;terminal window&quot;, it is this window to which we are referring.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">(The first time this is run it will install the Ubuntu/Linux machine in Virtual Box… note that this can take a bit of time and may seem to hang the terminal window. Just be</p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">patient and WAIT. (Possibly 20 minutes to completion of the initial “vagrant up” process.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.4:</span><span class="p"> In this step we will make needed adjustments to the VirtualBox settings.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 14pt;text-align: left;">- <span class="p">Start the VirtualBox (VB) application (if it isn’t already up).</span></p><p class="s14" style="padding-top: 1pt;padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">In the left pane of the application window, check to see if the virtual machine is running. If it shows “Running”, right click on the blue box with the virtual machine name and select “Close -&gt; Power Oﬀ”.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- <span class="p">In the next dialog, click “Power Oﬀ”.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 14pt;text-align: left;">- <span class="p">Click the click the “Settings” icon (looks like a gear) at the top.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 14pt;text-align: left;">- <span class="p">In the Settings window, click the “Ports” icon and then select the “USB” tab.</span></p><p class="s14" style="padding-top: 1pt;padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">Make sure that “Enable USB Controller” is checked and that “USB 3.0” is also selected.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- <span class="p">Click “OK” to save the settings.</span></p><p class="s14" style="padding-top: 1pt;padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">Click the “Start” icon (green right pointing arrow) at the top. (If you get a request to allow keystrokes click “Open Settings” to open the Settings -&gt; Security and Privacy dialog. Checkmark “Virtual Box and select “Later”.)</span></p><p class="s14" style="padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: justify;">- <span class="p">In the terminal window that opened from Virtual Box, note the small icons at the bottom of this screen. Click on the icon which is third from left (looks like a USB plug).</span></p><p class="s14" style="padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: justify;">- <span class="p">The window that pops up lists the USB devices that the virtual machine knows about. Click anywhere on the desktop to close this window.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 14pt;text-align: justify;">- <span class="p">Now insert a USB memory stick and click that same icon again. You should see</span></p><p style="padding-top: 1pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">your USB stick listed as &quot;<b>Generic USB Mass Storage Device [0500]</b>&quot;. (Perhaps greyed out because the Apple system has mounted it and so it isn’t available to the VB. That is OK. If you go to Finder and Eject the stick but don’t physically</p><p style="padding-left: 30pt;text-indent: 0pt;text-align: left;">unplug the USB stick, then go back and again click the small USB icon, you will see it listed among the devices and NOT greyed out.)</p><p class="s14" style="padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">Click on your stick in the listing which will mount your stick to VB. Verify that there is now a check mark beside it.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- <span class="p">Now go back and click the &quot;Settings&quot; icon again and select Ports -&gt; USB.</span></p><p class="s14" style="padding-top: 1pt;padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">In the lower half of the dialog on the right side of the &quot;Filters&quot; area, find and click the icon with a &quot;+&quot;. You will see your USB stick listed.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- <span class="p">Click the USB stick entry to add your stick to the filters list.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 14pt;text-align: justify;">- <span class="p">Click OK.</span></p><p class="s14" style="padding-top: 1pt;padding-left: 30pt;text-indent: -13pt;line-height: 14pt;text-align: left;">- <span class="p">Finally, go back to the small VB window we used previously to mount your USB stick to VB and uncheck the stick (unmounted from the Virtual Box).</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;">- <span class="p">Go to the Apple Finder to eject the stick there.</span></p><p class="s14" style="padding-left: 17pt;text-indent: 0pt;line-height: 16pt;text-align: left;">- <span class="p">Remove the stick.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.5:</span><span class="p"> Note: make sure that we have the vagrant window open (see step 2.3), then type the following to set up the vagrant environment:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">python3 -m pip install click</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">python3 -m pip install pygithub</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.6:</span><span class="p"> This step will set up a public / private SSH key pair which will be used in doing password-less logins to your target device (NEO or RPi). In the terminal window type:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">ssh-keygen -t rsa</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">and take defaults for storage location (/home/vagrant/.ssh/id_rsa) and empty passphrase. (Note that the referenced path is not accessible from the Mac desktop… it is only available in the Linux environment through our terminal window.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 2.7:</span><a href="http://www.balena.io/etcher/)" class="s16" target="_blank"> Install balenaEtcher (</a><span class="s15">https://www.balena.io/etcher/</span><span class="p">). We will use this to burn the starting image on our uSD card (later)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">This completes the setup of the Mac build environment.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part5.htm">&lt; Previous</a><span> | </span><a href="../Making%20A%20ConnectBox%20on%20RPi.html">Contents</a><span> | </span><a href="part7.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
