<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>This step will boot up the target machine (NEO or RPi) with the uSD inserted. We will then make edits to the target machine environment to enable login as user “root” via ssh without password (ie, Keys).</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part19.htm">&lt; Previous</a><span> | </span><a href="../Making_A_ConnectBox.html">Contents</a><span> | </span><a href="part21.htm">Next &gt;</a></p><p class="s18" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">This step will boot up the target machine (NEO or RPi) with the uSD inserted. We will then make edits to the target machine environment to enable login as user “root” via ssh without password (ie, Keys).</p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.3:</span><span class="p"> Put microSD into the target machine (NEO or RPi), and use an IP cable to connect the target machine into your network then power up the target machine.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><span class="s12" style=" background-color: #88FA4E;">Step 5.4:</span><span class="p"> Open a terminal window on the RPi and type:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: justify;">~$ <span class="s8">cd /home/pi/connectbox/</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.5:</span><span class="p"> Find the IP of the target machine… I used the iPhone app Scany… you are looking for a used IP that comes and goes as you power the target machine up and down… use whatever tool you are familiar with.</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">In the following instructions, substitute the IP you found for the target in place of <span style=" color: #B51700;">10.0.0.118</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><span class="s12" style=" background-color: #88FA4E;">Step N5.6:</span><span class="p"> Using the terminal window, connect to the NEO by typing:</span></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: justify;">~$ <a href="mailto:root@10.0.0.118" style=" color: #B51700; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 12pt;" target="_blank">ssh </a><a href="mailto:oot@10.0.0.118" class="s19" target="_blank">root@10.0.0.118</a></p><p style="padding-left: 5pt;text-indent: 30pt;text-align: justify;">(use password <span style=" color: #B51700;">1234 </span>and follow prompts to create new pw “<span style=" color: #B51700;">connectbox</span>”). After entering the new password twice, type <span style=" color: #B51700;">Ctrl-c </span>which will close the dialog and exit the NEO.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step R5.6):</span><span class="p"> Using the terminal window, connect to the RPi by typing:</span></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;">~$ <a href="mailto:pi@10.0.0.118" style=" color: #B51700; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 12pt;" target="_blank">ssh </a><a href="mailto:pi@10.0.0.118" class="s19" target="_blank">pi@10.0.0.118</a></p><p style="padding-left: 5pt;text-indent: 30pt;text-align: left;">(answer “yes” to the dialog re: logging into a new machine and then use password “<span style=" color: #B51700;">raspberry</span>”)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Once we are logged in as user “pi”, we need to enable the “root” account on the RPi machine. So type the following commands:</p><p class="s20" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">~# <span style=" color: #B51700;">sudo passwd root</span></p><p class="s20" style="padding-left: 65pt;text-indent: 0pt;text-align: left;">(follow prompts to give root the password “<span style=" color: #B51700;">connectbox</span>&quot; then)</p><p class="s20" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">~# <span style=" color: #B51700;">sudo echo &#39;PermitRootLogin yes&#39; &gt;&gt; /etc/ssh/sshd_config</span></p><p class="s20" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">~# <span style=" color: #B51700;">sudo service ssh restart </span>// Don’t forget this!</p><p class="s20" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">~# <span style=" color: #B51700;">exit</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="s30" style=" background-color: #88FA4E;">Step 5.7:</span><span class="s31"> Display and copy the public key set up in Step 4.4:</span></p><p style="padding-left: 15pt;text-indent: 0pt;line-height: 13pt;text-align: left;">~$ <span class="s8">cat /home/pi/.ssh/id_rsa.pub</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">COPY the contents of this file by highlighting the text and doing Cmd-C (this text is the public key we need to put in the authorized_keys file on the target machine.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.8: </span><span class="p">Log into the target machine and paste the public key into the file authorized_keys:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <a href="mailto:root@10.0.0.118" style=" color: #B51700; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 12pt;" target="_blank">ssh </a><a href="mailto:root@10.0.0.118" class="s19" target="_blank">root@10.0.0.118</a>. (password is still “connectbox”)</p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">mkdir .ssh</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">cd .ssh</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">touch authorized_keys</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">chmod 600 authorized_keys</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">echo ‘&lt;copied_text&gt;’ &gt;&gt; authorized_keys</span></p><p style="padding-left: 5pt;text-indent: 36pt;text-align: left;">to paste your ssh public key into the file “authorized_keys”. Note: Paste the required text into the command line in place of <span class="s8">&lt;copied_text&gt; </span>for the above command.</p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">And DON’T forget the single quote characters just before and after the pasted text.</p><p style="padding-left: 28pt;text-indent: 0pt;text-align: left;">~# <span class="s8">exit                </span>(exit out of the target machine)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.9:</span><span class="p"> Make sure you can do a PW-less login to to the target machine as user “root”:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <a href="mailto:root@10.0.0.118" style=" color: #B51700; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 12pt;" target="_blank">ssh </a><a href="mailto:oot@10.0.0.118" class="s19" target="_blank">root@10.0.0.118</a></p><p style="padding-left: 48pt;text-indent: 0pt;text-align: left;">This login should happen WITHOUT the target machine asking for a password</p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">~# <span class="s8">exit</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">exit out of the target machine</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.10:</span><span class="p"> Connect a wifi hub antenna to a USB connector on the target machine. (The build will fail if it doesn’t find a USB wifi dongle.) Lots of oﬀerings on Amazon. Here is one possibility:</span></p><p class="s15" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">https://www.amazon.com/Adapter-600Mbps-802-11ac-Wireless-Compatible/dp/<span class="p"> </span>B086WDF6VF/ref=sr_1_15?<span class="p"> </span>dchild=1&amp;keywords=usb+wifi+dongle&amp;qid=1589402526&amp;sr=8-15</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #88FA4E;">Step 5.11</span><span class="s21" style=" background-color: #88FA4E;">:</span><span class="s20"> </span><span class="p">Starting the &quot;step by step&quot; build. From the terminal window run:</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <span class="s8">cd /home/pi/connectbox</span></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;">~$ <span style=" color: #B51700;">connectbox-tools/deployment/make_cb.py </span>Typical script queries and your responses:</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Update ansible [y/N]: <span style=" color: #B51700;">&lt;CR&gt;</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tag for release [v20200508]: <span class="s8">&lt;CR&gt;</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">IP of build device: <span class="s8">10.0.0.118       </span>(or whatever IP you found)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">After about 50 minutes of activity the script prints something like:</p><p class="s22" style="padding-left: 31pt;text-indent: 0pt;text-align: left;">PLAY RECAP</p><p class="s22" style="padding-left: 35pt;text-indent: 0pt;text-align: left;">10.0.0.118 : ok=134 changed=106 unreachable=0 failed=0</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">If the build to the uSD has succeeded, the PLAY RECAP (above) will show “failed=0”.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">This completes the creation of an uSD card containing the ConnectBox software for your target machine. At this point you can now power down the target machine and remove the uSD card. If you want to create a software image (*.img file) which can be used to create other uSD cards with this same image, proceed to Section 6, &quot;Shrinking The Image&quot;. Otherwise you can just put this uSD chip into your target machine and power up to use you ConnectBox.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Proceed to <b>Section 6: Shrinking the Image</b></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part19.htm">&lt; Previous</a><span> | </span><a href="../Making_A_ConnectBox.html">Contents</a><span> | </span><a href="part21.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
