---
# Check early on to see if the style of interface names need to be changed
#  (only applicable to Ubuntu, and not when we're running CI, which we assume
#   is synonomous with running on AWS)
# We do this before the check for the Armbian reboot oracle. If we need
#  to reboot to activate the old-style interface names, we'll sort out the
#  reboot oracle too, but if the reboot oracle check is before this check
#  we'll need to reboot a second time (after creating the symlink)
- name: setup use of old-style interface names for predictability across devices
  file:
    dest: /etc/udev/rules.d/80-net-setup-link.rules
    src: /dev/null
    state: link
  when: ansible_distribution == "Ubuntu" and ansible_virtualization_type != "xen"
  register: old_style_names

- name: Request reboot if interface naming style has changed
  fail:
    msg: "The system must be rebooted to apply old-style interface names"
  when: old_style_names.changed
  tags: skip_ansible_lint

# Check early on to see whether the OS needs to be
# rebooted to allow a disk expansion step to complete.
# This is Armbian only, but the check doesn't hurt others.
- name: Check for resize2fs reboot oracle
  stat:
    path: "/var/run/resize2fs-reboot"
  register: resize2fs_reboot

# If the oracle above exists then we shouldn't continue
- name: Fail when disk expansion is incomplete
  fail:
    msg: "The system must be rebooted because the disk expansion is not complete!"
  when: resize2fs_reboot.stat.exists == True

# Needed by Debian and Ubuntu Official AMIs
- name: Install aptitude
  apt:
    name: aptitude
    state: present
  when: ansible_lsb["id"] == "Debian" or ansible_lsb["id"] == "Ubuntu"

# For mikegleasonjr.firewall - it assumes Debian/Ubuntu will always have iptables
- name: Install iptables
  apt: name=iptables state=present
  when: ansible_os_family == 'Debian'

- name: Add signing keys for additional repositories
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    state: present
    id: "{{ item }}"
  with_items: "{{ repo_signing_keys }}"

# This is the initial population of the cache, so that we don't have
#  problems when adding a repo. If the cache already exists, we don't
#  need to run this step. This will be the case when the playbook is
#  run for a second or subsequent time within the cache_valid_time
- name: Populate apt cache to avoid problems when loading jessie backport repo
  apt:
    update-cache: yes
    cache_valid_time: 86400 # 1 day

- name: Enable Jessie backport repo
  apt_repository:
    repo: "{{ jessie_backports_repo }}"
    filename: jessie-backports
    state: present
  register: jessie_backport_repo_added

# This always needs to run given whenever the repo has been loaded, so there
#  is no cache_valid_time parameter. We skip ansible lint because we want to
#  run this task when the repo has been added, but the normal method for this
#  is a handler, but handlers can only run at the end, when it's too late.
- name: Populate apt cache now that repos are loaded
  apt:
    update-cache: yes
  when: jessie_backport_repo_added.changed
  tags: skip_ansible_lint

- name: Temporarily shutdown log2ram service on Armbian during package installation
  service:
    name: log2ram
    state: stopped
  when: connectbox_os == "armbian"
  notify: Start log2ram service

# Needed by Debian Jessie
- name: Install openresolv
  apt:
    name: openresolv
    state: present
  when: ansible_lsb["id"] == "Debian"

# See if we need to create a wlan0 interface when we're running in a sim
#  environment i.e. running virtualised
- name: Create a wlan0 interface
  command: /sbin/ip link add wlan0 type dummy
  when: "'wlan0' not in ansible_interfaces and ansible_virtualization_type != 'NA'"

# Non developer mode restricts ssh connections to ethernet
# This variable needs to be set before the mikegleasonjr.firewall role is run
- name: Set acceptable interfaces for inbound ssh
  set_fact:
    iptables_ssh_in_interface: "-i eth0"
  when: not developer_mode

