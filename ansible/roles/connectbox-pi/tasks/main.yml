---
- name: Configure hostname
  hostname:
    name: "{{ connectbox_default_hostname }}"

- name: Add hosts entry
  blockinfile:
    dest: /etc/hosts
    block: |
      127.0.0.1 {{ connectbox_default_hostname }}

- name: Configure hostname
  hostname:
    name: "{{ connectbox_default_hostname }}"

- name: Add hosts entry
  blockinfile:
    dest: /etc/hosts
    block: |
      127.0.0.1 {{ connectbox_default_hostname }}

- name: Create connectbox group
  group:
    name: _connectbox
    system: yes

# Not strictly necessary but can be used for testing
- name: Create _connectbox user and to _connectbox group
  user:
    name: _connectbox
    group: _connectbox
    system: yes
    createhome: no

# TODO confirm this works as expected
- name: Add www-data to _connectbox group
  user:
    name: www-data
    groups: _connectbox
    append: yes

- name: Make scripts directory
  file:
    state: directory
    path: /usr/local/connectbox/bin
    owner: _connectbox
    group: _connectbox
    recurse: yes
    mode: 0755

- name: Make etc directory
  file:
    state: directory
    path: /usr/local/connectbox/etc
    owner: _connectbox
    group: _connectbox
    recurse: yes
    mode: 0755

- name: Copy connectbox scripts
  copy:
    src: ../scripts/
    dest: /usr/local/connectbox/bin/
    owner: _connectbox
    group: _connectbox
    mode: 0755

- name: Copy connectbox basic auth credentials
  copy:
    content: "{{ connectbox_admin_credentials }}"
    dest: /usr/local/connectbox/etc/basicauth
    owner: _connectbox
    group: _connectbox
    mode: 0660

- name: allow connectbox group to execute connectbox scripts
  blockinfile:
    dest: /etc/sudoers
    validate: /usr/sbin/visudo --check --file="%s"
    block: |
      %_connectbox ALL=(ALL) NOPASSWD: /usr/local/connectbox/bin/
  notify: reload php5-fpm

# If the system is updated before any iptables modules are loaded
#  the system can't find the modules and iptables rules can't be
#  loaded first time. (A repeat ansible run seems to fix it, though).
# Let's avoid a first-time failure by doing the upgrade after the
#  iptables rules have been updated.
# Consistent with: https://serverfault.com/questions/593263/iptables-nat-does-not-exist
- name: Update existing packages
  apt:
    upgrade: safe
  tags:
  - full-build-only

# Run in a handler so sshd is disabled right at the end, at least to the
#  extent that we can influence it. While handlers are run in the order that
#  they are defined within a role, it's unclear how handlers are ordered
#  when multiple roles fire handlers.
# sshd forks child processes to handle connections, so stopping and disabling
#  sshd doesn't disconnect the session that's actually doing the stopping and
#  disabling (or the control session if pipelining is in use). This means we
#  we can use a regular ansible service task rather than needing to background
#  the command that does the work.
#
# This is a no-op force the handler to run (assuming the conditional passes)
- name: Schedule task to stop and disable sshd
  assert:
    that:
      - True
  changed_when: True
  when: disable_sshd_after_run==True
  notify: Disable sshd
