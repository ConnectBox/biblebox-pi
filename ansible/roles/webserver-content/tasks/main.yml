---
- name: create folders for default content/shared and config
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0775
  with_items:
    - "{{ waypoint_default_content_root }}"
    - "{{ waypoint_app_root }}"

- name: retrieve waypoint-client-repo
  git:
    repo: "{{ waypoint_client_repo }}"
    dest: /tmp/waypoint_client

- name: Copy external waypoint client interface
  command: cp -r . "{{ waypoint_default_content_root }}"
  args:
    chdir: /tmp/waypoint_client/{{ waypoint_client_path }}

- name: fix ownership of waypoint_web_root
  file:
    path: "{{ waypoint_web_root }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: yes

# The chat and admin backend
# (looping deprecated in 2.11)
- name: Install packages for waypoint server process
  pip:
    virtualenv: "{{ waypoint_web_root }}/waypoint_virtualenv"  # XXX Could do better?
    virtualenv_python: python3
    name: ['flask>=1.0.0', 'ua-parser==0.10.0', 'gunicorn==20.1.0', 'requests==2.25.1', 'six==1.11.0', 'sqlalchemy==1.3.0']
    state: latest   
  tags:
    - captive_portal

# Copy client interface files
- name: Copy waypoint client interface
  synchronize:
    src: ../python/
    dest: "{{ waypoint_app_root }}"
  tags:
    - captive_portal
  notify:
    - Restart gunicorn

- name: Copy gunicorn tempfiles definition
  template:
    src: etc_tmpfiles.d_gunicorn.conf.j2
    dest: /etc/tmpfiles.d/gunicorn.conf
  tags:
    - captive_portal

- name: Copy gunicorn systemd unit file
  template:
    src: etc_systemd_system_gunicorn.service.j2
    dest: /etc/systemd/system/gunicorn.service
  tags:
    - captive_portal
  notify: Restart gunicorn

- name: Enable gunicorn service
  service:
    name: gunicorn
    enabled: yes
    #state: started
  tags:
    - captive_portal
