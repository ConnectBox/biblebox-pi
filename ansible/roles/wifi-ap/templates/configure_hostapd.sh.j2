#!/bin/bash

SYSLOG_TAG=$(basename $0);
WIFI_INTERFACE={{ client_facing_if }};
HOSTAPD_CONF=/etc/hostapd/hostapd.conf;


function configure_country_code {
  current_hostapd_cc=$(awk -F= '$1 ~ /^country_code/ {print $2;}' ${HOSTAPD_CONF});
  initial_wifi_interface_state=$(cat /sys/class/net/${WIFI_INTERFACE}/operstate);

  # CRDA config sets REGDOMAIN. If that's set, then we treat that as a
  #  deliberate override.
  . /etc/default/crda;

  if [ -z "${REGDOMAIN}" ]; then
    # No CRDA override. Let's scan surrounding networks and take the most
    #  popular regulatory domain

    if [ "$initial_wifi_interface_state" != "up" ]; then
      ifconfig ${WIFI_INTERFACE} up;
    fi
    ambient_cc=$(iw dev ${WIFI_INTERFACE} scan |
      awk '$1 ~ /Country:/ { print $2;}' |
      sort |
      uniq -c |
      sort -n |
      tail -1 |
      awk '{print $2;}');
    # Leave things as you found them, like your parents said
    if [ "$initial_wifi_interface_state" = "down" ]; then
      ifconfig ${WIFI_INTERFACE} down;
    fi

    # If we can't get any regulatory domains from surrounding networks
    #  then we have no reason to change what's set in hostapd
    if [ -z "${ambient_cc}" ]; then
      new_cc=${current_hostapd_cc};
    else
      new_cc=${ambient_cc};
    fi
  else
    new_cc=${REGDOMAIN};
  fi

  if [ "${new_cc}" != "${current_hostapd_cc}" ]; then
    logger -t ${SYSLOG_TAG} "Setting hostapd country_code from ${current_hostapd_cc} to ${new_cc}";
    sed -i 's/^country_code.*/country_code='${new_cc}'/' $HOSTAPD_CONF;
  fi
}


configure_country_code
# Set ht_capab and 802.11ac settings, and sync
/usr/local/connectbox/wifi_configurator_venv/bin/wifi_configurator
